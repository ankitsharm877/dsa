package solid.ocp;

//Open Closed Principle: classes should be open for extension but closed for modification. 
//This means you can extend the functionality of a class without modifying its existing code, usually through inheritance or interfaces.

//Violates OCP
class Shape {
 public double calculateArea(String shapeType) {
	 double radius;
	 int length;
	 int breadth;
     if (shapeType.equals("circle")) {
		return Math.PI * radius * radius;
     } else if (shapeType.equals("rectangle")) {
		return length * breadth;
     }
     return 0;
 }
}


//Improved: Use inheritance or interfaces to extend functionality without modifying the existing code.