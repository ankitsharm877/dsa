package example5;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

public class Day91 {

	public static void main(String[] args) {
		printPermutations("abc", "");
		System.out.println(getPermutations("abc"));
		printSS("abc", "");
		System.out.println(getSS("abc"));
	}
	
	
	public static void printPermutations(String str, String ans) {
		if (str.length() == 0) {
			System.out.println(ans);
			return;
		}
		for (int i = 0; i < str.length(); i++) {
			char ch = str.charAt(i);
			String ros = str.substring(0, i) + str.substring(i + 1);
			printPermutations(ros, ans + ch);
		}
	}
	
	public static ArrayList<String> getPermutations(String str) {
		if (str.length() == 0) {
			ArrayList<String> br = new ArrayList<>();
			br.add("");
			return br;
		}
		
		char cc = str.charAt(0);
		String ros = str.substring(1);
		
		ArrayList<String> mr = new ArrayList<>();
		ArrayList<String> rr = getPermutations(ros);
		
		for (String rrs : rr) {
			for (int i = 0; i <= rrs.length(); i++) {
				String val =  rrs.substring(0, i) + cc + rrs.substring(i);
				mr.add(val);
			}
		}
		return mr;
	}
	
	public static void printSS(String str, String ans) {
		if (str.length() == 0) {
			System.out.println(ans);
			return;
		}
		char ch = str.charAt(0);
		String ros = str.substring(1);
		printSS(ros, ans);
		printSS(ros, ans + ch);
	}
	
	public static ArrayList<String> getSS(String str) {
		if (str.length() == 0) {
			ArrayList<String> br = new ArrayList<>();
			br.add("");
			return br;
		}
		char cc = str.charAt(0);
		String ros = str.substring(1);
		ArrayList<String> mr = new ArrayList<>();
		ArrayList<String> rr = getSS(ros);
		
		for (String rrs : rr) {
			mr.add(rrs);
			mr.add(cc + rrs); 
		}
		return mr;
	}
	
	
	public List<List<Integer>> permute(int[] nums, int start) {
        if (start == nums.length) {
			List<List<Integer>> br = new LinkedList<>();
			List<Integer> brChild = new LinkedList<>();
            br.add(brChild);
			return br;
		}
		
		int cc = nums[start++];
		List<List<Integer>> mr = new LinkedList<>();
		List<List<Integer>> rr = permute(nums, start);

		for (List<Integer> rrList : rr) {
			for (int i = 0; i <= rrList.length(); i++) {
				String val =  rrs.substring(0, i) + cc + rrs.substring(i);
                List<Integer> list = new ArrayList<>();
				mr.add(val);
			}
		}
		return mr;
    }

}
